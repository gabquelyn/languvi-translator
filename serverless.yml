org: lonedev
app: languvi-translator
service: languvi-translator
frameworkVersion: "3"

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    USER_POOL_ID: { Ref: TranslatorPool }
    CLIENT_ID: { Ref: TranslatorClient }
    TRANSLATOR_TABLE: ${self:service}-translatorsTable-${sls:stage}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    ORDERS_TABLE: ${self:custom.clientOrdersTable.name}
    TRANSLATOR_BUCKET: ${self:custom.translatorBucket.name}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminUpdateUserAttributes
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:Query*
            - sqs:SendMessage
            - s3:PutObject
          Resource:
            - ${self:custom.translatorTableArn}
            - ${self:custom.translatorPoolArn}
            - ${self:custom.MailQueue.arn}
            - ${self:custom.clientOrdersTable.arn}
            - arn:aws:s3:::${self:custom.translatorBucket.name}/*

  httpApi:
    cors: true
    authorizers:
      translatorAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: ${self:custom.cognitoIssuerUrl.Value}
        audience: 
          - !Ref TranslatorClient

resources:
  Resources:
    TranslatorPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: languvi-translator-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        AutoVerifiedAttributes:
          - email

    TranslatorClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: languvi-translator-pool
        GenerateSecret: false
        UserPoolId: !Ref TranslatorPool
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - 'ADMIN_NO_SRP_AUTH'
  
    TranslatorTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:service}-translatorsTable-${sls:stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName : email
            AttributeType: S
          - AttributeName: approved
            AttributeType: S
        KeySchema: 
          - AttributeName: email
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: translatorStatus
            KeySchema: 
              - AttributeName: approved
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    languviTranslatorBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.translatorBucket.name}
    
    languviTranslatorBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref languviTranslatorBucket
        PolicyDocument:
          Statement:
            - Sid: PublicRead
              Effect: Allow
              Principal: '*'
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.translatorBucket.name}/*  
  Outputs:
    translatorTableName:
      Value: ${self:service}-translatorsTable-${sls:stage}
      Export:
        Name: ${self:service}-translatorsTable-${sls:stage}-Name
    translatorTableArn:
      Value: ${self:custom.translatorTableArn}
      Export: 
        Name: ${self:service}-translatorsTable-${sls:stage}-Arn
        
functions:
  signup:
    handler: src/authentication/signup.handler
    events:
      - httpApi:
          path: /signup
          method: POST

  getAuthToken:
    handler: src/authentication/generateToken.handler
    events:
      - httpApi:
          path: /getToken/{email}
          method: GET

  confirmEmail:
    handler: src/authentication/confirmEmail.handler
    events:
      - httpApi:
          path: /auth_email
          method: POST
  
  login:
    handler: src/authentication/signin.handler
    events:
      - httpApi:
          path: /login
          method: POST
  
  updatepassword:
    handler: src/authentication/updatepassword.handler
    events:
      - httpApi:
          path: /updatepassword
          method: POST
          authorizer:
            name: translatorAuthorizer
  
  editProfile:
    handler: src/translator/editprofile.handler
    events:
      - httpApi:
          path: /editprofile
          method: PUT
          authorizer:
            name: translatorAuthorizer
  
  getprofile: 
    handler: src/translator/getprofile.handler
    events:
      - httpApi:
          path: /getprofile
          method: GET
          authorizer:
            name: translatorAuthorizer
  
  picktotranslate:
    handler: src/translator/translate.handler
    events:
      - httpApi:
          path: /picktranslate/{orderId}
          method: GET
          authorizer:
            name: translatorAuthorizer

  picktoproofread:
    handler: src/translator/proofread.handler
    events:
      - httpApi:
          path: /proofread/{orderId}
          method: GET
          authorizer:
            name: translatorAuthorizer

  translatorpool:
    handler: src/translator/translatorpool.handler
    events:
      - httpApi:
          path: /translatorpool
          method: GET
          authorizer:
            name: translatorAuthorizer

  proofreaderpool:
    handler: src/translator/proofreaderpool.handler
    events:
      - httpApi:
          path: /proofreaderpool
          method: GET
          authorizer:
            name: translatorAuthorizer

  submitfortranslate:
    handler: src/translator/submitTranslate.handler
    events:
      - httpApi:
          path: /submitfortranslate
          method: POST
          authorizer:
            name: translatorAuthorizer

  submitforproofread:
    handler: src/translator/submitProofread.handler
    events:
      - httpApi:
          path: /submitforproofread
          method: POST
          authorizer:
            name: translatorAuthorizer

custom:
  translatorTableArn: !GetAtt TranslatorTable.Arn
  translatorPoolArn: !GetAtt TranslatorPool.Arn
  region: us-east-1
  cognitoIssuerUrl: 
    Value: !Join
      - ''
      - - 'https://cognito-idp.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/'
        - !Ref TranslatorPool
  translatorBucket:
    name: languvi-translator-bucket-${self:provider.stage}
  MailQueue:
    arn: !ImportValue MailQueue-${sls:stage}-Arn
    url: !ImportValue MailQueue-${sls:stage}-Url

  clientOrdersTable:
    name: !ImportValue clientOrdersTable-${self:provider.stage}-Name
    arn: !ImportValue clientOrdersTable-${self:provider.stage}-Arn

  bundle:
    linting: false